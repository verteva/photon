@use "sass:string";

@function getThemeProperty($component, $property, $style, $state, $fallback) {
  $state-modifier: if(string.length($state) > 0, '#{$state}-', '');
  $style-modifier: if(string.length($style) > 0, '#{$style}-', '');
  $style-var: --#{$component}-#{$style-modifier}#{$state-modifier}#{$property};
  @return var($style-var, $fallback)
}

$all-transitions: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter,
backdrop-filter;



// Determine if string ends with another substring
@function ends-with($string, $find) {
  @return str-length($string) >= str-length($find) and str-slice($string, (str-length($string) - str-length($find) + 1)) == $find;
}


/// Replace `$search` with `$replace` in `$string`
/// @author Kitty Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}